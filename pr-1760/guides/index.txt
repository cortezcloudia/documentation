3:I[78703,[],""]
5:I[53751,[],""]
4:["slug","guides/index","c"]
0:["KcQsxbl8ijLWUi8PC6cUr",[[["",{"children":["(docs)",{"children":[["slug","guides/index","c"],{"children":["__PAGE__?{\"slug\":[\"guides\",\"index\"]}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["(docs)",{"children":[["slug","guides/index","c"],{"children":["__PAGE__",{},[["$L1","$L2",null],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(docs)","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[null,"$L6"],null],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/documentation/pr-1760/_next/static/css/57fd29d614ed1e98.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/documentation/pr-1760/_next/static/css/1d8f47b93302ad3a.css","precedence":"next","crossOrigin":"$undefined"}]],"$L7"],null],null],["$L8",null]]]]
9:I[72921,["469","static/chunks/469-2d5acc9acf66eccf.js","997","static/chunks/997-75e823dd1a836994.js","645","static/chunks/645-9090246185bbfb87.js","275","static/chunks/275-9798f802e7dd0072.js","309","static/chunks/309-3aa1791e30a2d2cd.js","185","static/chunks/app/layout-9c016cc1450e1f47.js"],"ThemeNoFlash"]
a:I[99495,["469","static/chunks/469-2d5acc9acf66eccf.js","997","static/chunks/997-75e823dd1a836994.js","645","static/chunks/645-9090246185bbfb87.js","275","static/chunks/275-9798f802e7dd0072.js","309","static/chunks/309-3aa1791e30a2d2cd.js","185","static/chunks/app/layout-9c016cc1450e1f47.js"],"ThemeProvider"]
b:I[65375,["469","static/chunks/469-2d5acc9acf66eccf.js","997","static/chunks/997-75e823dd1a836994.js","645","static/chunks/645-9090246185bbfb87.js","275","static/chunks/275-9798f802e7dd0072.js","309","static/chunks/309-3aa1791e30a2d2cd.js","185","static/chunks/app/layout-9c016cc1450e1f47.js"],"TooltipProvider"]
c:I[5612,["469","static/chunks/469-2d5acc9acf66eccf.js","997","static/chunks/997-75e823dd1a836994.js","645","static/chunks/645-9090246185bbfb87.js","275","static/chunks/275-9798f802e7dd0072.js","309","static/chunks/309-3aa1791e30a2d2cd.js","185","static/chunks/app/layout-9c016cc1450e1f47.js"],"default"]
d:I[76461,["469","static/chunks/469-2d5acc9acf66eccf.js","997","static/chunks/997-75e823dd1a836994.js","645","static/chunks/645-9090246185bbfb87.js","275","static/chunks/275-9798f802e7dd0072.js","309","static/chunks/309-3aa1791e30a2d2cd.js","185","static/chunks/app/layout-9c016cc1450e1f47.js"],"Header"]
e:I[47793,["880","static/chunks/880-58f87b1b2cdfcd9c.js","601","static/chunks/app/error-dce7a5b4ac770495.js"],"default"]
f:I[34606,["880","static/chunks/880-58f87b1b2cdfcd9c.js","160","static/chunks/app/not-found-45ad21601cda2907.js"],"Error"]
10:I[5388,["469","static/chunks/469-2d5acc9acf66eccf.js","997","static/chunks/997-75e823dd1a836994.js","645","static/chunks/645-9090246185bbfb87.js","275","static/chunks/275-9798f802e7dd0072.js","309","static/chunks/309-3aa1791e30a2d2cd.js","185","static/chunks/app/layout-9c016cc1450e1f47.js"],"AppFooter"]
11:I[6447,["705","static/chunks/8bb4d8db-f550a467b5fdddc3.js","469","static/chunks/469-2d5acc9acf66eccf.js","880","static/chunks/880-58f87b1b2cdfcd9c.js","997","static/chunks/997-75e823dd1a836994.js","84","static/chunks/84-b2e936d7bdb19eac.js","645","static/chunks/645-9090246185bbfb87.js","502","static/chunks/502-f3f1bfac07c8bf29.js","529","static/chunks/app/(docs)/layout-e3a8a44544eea36d.js"],"MdTabsGroupContextProvider"]
12:I[55856,["705","static/chunks/8bb4d8db-f550a467b5fdddc3.js","469","static/chunks/469-2d5acc9acf66eccf.js","880","static/chunks/880-58f87b1b2cdfcd9c.js","997","static/chunks/997-75e823dd1a836994.js","84","static/chunks/84-b2e936d7bdb19eac.js","645","static/chunks/645-9090246185bbfb87.js","502","static/chunks/502-f3f1bfac07c8bf29.js","529","static/chunks/app/(docs)/layout-e3a8a44544eea36d.js"],"ImageModalProvider"]
13:I[44932,["705","static/chunks/8bb4d8db-f550a467b5fdddc3.js","469","static/chunks/469-2d5acc9acf66eccf.js","880","static/chunks/880-58f87b1b2cdfcd9c.js","997","static/chunks/997-75e823dd1a836994.js","84","static/chunks/84-b2e936d7bdb19eac.js","645","static/chunks/645-9090246185bbfb87.js","502","static/chunks/502-f3f1bfac07c8bf29.js","529","static/chunks/app/(docs)/layout-e3a8a44544eea36d.js"],"DocLeftNav"]
14:I[55856,["705","static/chunks/8bb4d8db-f550a467b5fdddc3.js","469","static/chunks/469-2d5acc9acf66eccf.js","880","static/chunks/880-58f87b1b2cdfcd9c.js","997","static/chunks/997-75e823dd1a836994.js","84","static/chunks/84-b2e936d7bdb19eac.js","645","static/chunks/645-9090246185bbfb87.js","502","static/chunks/502-f3f1bfac07c8bf29.js","529","static/chunks/app/(docs)/layout-e3a8a44544eea36d.js"],"ImageModal"]
7:["$","html",null,{"lang":"en","suppressHydrationWarning":true,"className":"__variable_fc87ca __variable_04cdca font-sans","children":["$","body",null,{"children":[["$","$L9",null,{}],["$","$La",null,{"cookieThemeDomain":"","children":["$","$Lb",null,{"children":["$","$Lc",null,{"children":[["$","$Ld",null,{}],["$","div",null,{"className":"pt-[var(--app-header-height)]","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$e","errorStyles":[],"errorScripts":[],"template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","$Lf",null,{"title":"Page not found","description":"Sorry, but the page you were looking for could not be found."}],"notFoundStyles":[]}]}],["$","$L10",null,{}]]}]}]}]]}]}]
6:["$","$L11",null,{"children":["$","$L12",null,{"children":[["$","div",null,{"className":"flex relative","children":[["$","$L13",null,{"tocPaths":["/guides","/open-source","/migration-guides"]}],["$","div",null,{"className":"flex-1","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(docs)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]}]]}],["$","$L14",null,{}]]}]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Preview: Introduction to Qiskit"}],["$","meta","3",{"name":"description","content":"What is Qiskit? This document provides an introduction to the Qiskit stack."}],["$","meta","4",{"name":"robots","content":"none"}],["$","meta","5",{"property":"og:title","content":"Introduction to Qiskit | IBM Quantum Documentation"}],["$","meta","6",{"property":"og:description","content":"What is Qiskit? This document provides an introduction to the Qiskit stack."}],["$","meta","7",{"property":"og:site_name","content":"IBM Quantum Documentation"}],["$","meta","8",{"property":"og:type","content":"website"}],["$","meta","9",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","10",{"name":"twitter:creator","content":"@IBM"}],["$","meta","11",{"name":"twitter:title","content":"Introduction to Qiskit | IBM Quantum Documentation"}],["$","meta","12",{"name":"twitter:description","content":"What is Qiskit? This document provides an introduction to the Qiskit stack."}],["$","link","13",{"rel":"icon","href":"/icon.svg"}],["$","meta","14",{"name":"next-size-adjust"}]]
1:null
15:I[55856,["705","static/chunks/8bb4d8db-f550a467b5fdddc3.js","469","static/chunks/469-2d5acc9acf66eccf.js","880","static/chunks/880-58f87b1b2cdfcd9c.js","997","static/chunks/997-75e823dd1a836994.js","84","static/chunks/84-b2e936d7bdb19eac.js","645","static/chunks/645-9090246185bbfb87.js","502","static/chunks/502-f3f1bfac07c8bf29.js","529","static/chunks/app/(docs)/layout-e3a8a44544eea36d.js"],"Image"]
16:I[65469,["705","static/chunks/8bb4d8db-f550a467b5fdddc3.js","469","static/chunks/469-2d5acc9acf66eccf.js","880","static/chunks/880-58f87b1b2cdfcd9c.js","997","static/chunks/997-75e823dd1a836994.js","84","static/chunks/84-b2e936d7bdb19eac.js","275","static/chunks/275-9798f802e7dd0072.js","369","static/chunks/app/(docs)/%5B...slug%5D/page-1543cd2abecb676c.js"],""]
1d:I[30263,["705","static/chunks/8bb4d8db-f550a467b5fdddc3.js","469","static/chunks/469-2d5acc9acf66eccf.js","880","static/chunks/880-58f87b1b2cdfcd9c.js","997","static/chunks/997-75e823dd1a836994.js","84","static/chunks/84-b2e936d7bdb19eac.js","275","static/chunks/275-9798f802e7dd0072.js","369","static/chunks/app/(docs)/%5B...slug%5D/page-1543cd2abecb676c.js"],"PageToc"]
18:{"d":"M29.25,6.76a6,6,0,0,0-8.5,0l1.42,1.42a4,4,0,1,1,5.67,5.67l-8,8a4,4,0,1,1-5.67-5.66l1.41-1.42-1.41-1.42-1.42,1.42a6,6,0,0,0,0,8.5A6,6,0,0,0,17,25a6,6,0,0,0,4.27-1.76l8-8A6,6,0,0,0,29.25,6.76Z"}
17:["$","path",null,"$18"]
1a:{"d":"M4.19,24.82a4,4,0,0,1,0-5.67l8-8a4,4,0,0,1,5.67,0A3.94,3.94,0,0,1,19,14a4,4,0,0,1-1.17,2.85L15.71,19l1.42,1.42,2.12-2.12a6,6,0,0,0-8.51-8.51l-8,8a6,6,0,0,0,0,8.51A6,6,0,0,0,7,28a6.07,6.07,0,0,0,4.28-1.76L9.86,24.82A4,4,0,0,1,4.19,24.82Z"}
19:["$","path",null,"$1a"]
1c:{"d":"M10 6L10 8 22.59 8 6 24.59 7.41 26 24 9.41 24 22 26 22 26 6 10 6z"}
1b:["$","path",null,"$1c"]
2:["$","div",null,{"className":"grid grid-cols-[1fr,auto] relative","children":[["$","main",null,{"id":"main-content","className":"min-h-app mx-16 md:mx-96 lg:mx-[56px] xlg:mx-96 pb-96 pt-0 md:pt-24 xlg:pt-0 max-w-full md:max-w-[800px] overflow-auto","children":["$","div",null,{"className":"prose","children":[["$","h1",null,{"id":"introduction-to-qiskit","className":"group relative mx-0 scroll-pt-[var(--shell-top-bar-height)] break-words text-heading-06 text-text-primary","children":["Introduction to Qiskit",["$","a",null,{"title":"Permalink to this headline","children":["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"inline","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M29.25,6.76a6,6,0,0,0-8.5,0l1.42,1.42a4,4,0,1,1,5.67,5.67l-8,8a4,4,0,1,1-5.67-5.66l1.41-1.42-1.41-1.42-1.42,1.42a6,6,0,0,0,0,8.5A6,6,0,0,0,17,25a6,6,0,0,0,4.27-1.76l8-8A6,6,0,0,0,29.25,6.76Z"}],["$","path",null,{"d":"M4.19,24.82a4,4,0,0,1,0-5.67l8-8a4,4,0,0,1,5.67,0A3.94,3.94,0,0,1,19,14a4,4,0,0,1-1.17,2.85L15.71,19l1.42,1.42,2.12-2.12a6,6,0,0,0-8.51-8.51l-8,8a6,6,0,0,0,0,8.51A6,6,0,0,0,7,28a6.07,6.07,0,0,0,4.28-1.76L9.86,24.82A4,4,0,0,1,4.19,24.82Z"}],"$undefined"]}],"href":"#introduction-to-qiskit","className":"text-link-primary no-underline hover:underline inline heading-permalink pl-[8px] top-0 opacity-0 group-hover:opacity-100 transition-[opacity] duration-75 ease-[cubic-bezier(0.2,0,0.38,0.9)]"}]]}],"\n",["$","p",null,{"children":"The name \"Qiskit\" is a general term referring to a collection of software for executing programs on quantum computers. Most notably among these software tools is the open-source Qiskit SDK, and the runtime environment (accessed using Qiskit Runtime) through which you can execute workloads on IBM® quantum processing units (QPUs). As quantum technology evolves, so does Qiskit, with new capabilities released every year that expand this core collection of quantum software.","className":"group paragraph-el text-text-primary mx-0"}],"\n",["$","p",null,{"children":"In addition, many open-source projects are part of the broader Qiskit ecosystem. These software tools are not part of Qiskit itself, but rather interface with Qiskit and can provide valuable additional functionality.","className":"group paragraph-el text-text-primary mx-0"}],"\n",["$","$L15",null,{"src":"/documentation/pr-1760/images/qiskit-patterns/patterns.svg","alt":"All Qiskit pattern steps are shown (Map problem, Optimize for hardware, Execute on hardware, and Post-process results). All steps, except for 'Execute on hardware', use the Qiskit SDK. 'Optimizing for hardware' additionally uses the Qiskit Transpiler Service.  'Executing on hardware' uses only the Qiskit Runtime Service.","width":"912","height":"341"}],"\n",["$","p",null,{"children":["IBM is committed to the responsible development of quantum computing. Learn more and review our responsible quantum principles in the ",["$","$L16",null,{"children":"Responsible quantum computing","href":"/responsible-quantum-computing","className":"text-link-primary no-underline hover:underline inline"}]," topic."],"className":"group paragraph-el text-text-primary mx-0"}],"\n",[["$","hr",null,{"className":"mt-48 lg:mt-64 mb-16 md:mb-24 my-16 lg:my-24 border-t border-border-subtle box-content overflow-visible"}],["$","h2",null,{"id":"the-qiskit-sdk","className":"group relative mx-0 scroll-pt-[var(--shell-top-bar-height)] break-words text-heading-04 text-text-primary","children":["The Qiskit SDK",["$","a",null,{"title":"Permalink to this headline","children":["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"inline","xmlns":"http://www.w3.org/2000/svg","children":["$17","$19","$undefined"]}],"href":"#the-qiskit-sdk","className":"text-link-primary no-underline hover:underline inline heading-permalink pl-[8px] top-0 opacity-0 group-hover:opacity-100 transition-[opacity] duration-75 ease-[cubic-bezier(0.2,0,0.38,0.9)]"}]]}]],"\n",["$","p",null,{"children":["The Qiskit SDK (package name ",["$","a",null,{"children":[["$","code",null,{"children":"qiskit","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","aria-label":"(opens in a new tab)","width":16,"height":16,"viewBox":"0 0 32 32","role":"img","className":"inline ml-2","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M10 6L10 8 22.59 8 6 24.59 7.41 26 24 9.41 24 22 26 22 26 6 10 6z"}],"$undefined"]}]],"href":"https://pypi.org/project/qiskit/","className":"text-link-primary no-underline hover:underline inline","target":"_blank","rel":"noopener noreferrer nofollow"}],") is an open-source SDK for working with quantum computers at the level of extended (static, dynamic, and scheduled) quantum circuits, operators, and primitives. This library is the core component of Qiskit; it is the largest package under the Qiskit name with the broadest suite of tools for quantum computation, and many other components interface with it."],"className":"group paragraph-el text-text-primary mx-0"}],"\n",["$","p",null,{"children":"Some of the most useful features of the Qiskit SDK include:","className":"group paragraph-el text-text-primary mx-0"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","strong",null,{"children":"Circuit-building tools"}]," (",["$","$L16",null,{"children":["$","code",null,{"children":"qiskit.circuit","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],"href":"/api/qiskit/circuit","className":"text-link-primary no-underline hover:underline inline"}],") - For initializing and manipulating registers, circuits, instructions, gates, parameters, and control flow objects."],"className":"group paragraph-el text-text-primary mx-0"}],"\n"],"className":"my-12"}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","strong",null,{"children":"Circuit library"}]," (",["$","$L16",null,{"children":["$","code",null,{"children":"qiskit.circuit.library","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],"href":"/api/qiskit/circuit_library","className":"text-link-primary no-underline hover:underline inline"}],") - A vast range of circuits, instructions, and gates - key building blocks for circuit-based quantum computations."],"className":"group paragraph-el text-text-primary mx-0"}],"\n"],"className":"my-12"}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","strong",null,{"children":"Quantum info library"}]," (",["$","$L16",null,{"children":["$","code",null,{"children":"qiskit.quantum_info","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],"href":"/api/qiskit/quantum_info","className":"text-link-primary no-underline hover:underline inline"}],") - A toolkit for working with quantum states, operators and channels, using exact calculations (no sampling noise). Use this module to specify input observables and analyze fidelity of outputs from primitives queries."],"className":"group paragraph-el text-text-primary mx-0"}],"\n"],"className":"my-12"}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","strong",null,{"children":"Transpiler"}]," (",["$","$L16",null,{"children":["$","code",null,{"children":"qiskit.transpiler","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],"href":"/api/qiskit/transpiler","className":"text-link-primary no-underline hover:underline inline"}],") - For transforming and adapting quantum circuits to suit specific device topology, and optimizing for execution on real quantum processing units (QPUs)."],"className":"group paragraph-el text-text-primary mx-0"}],"\n"],"className":"my-12"}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","strong",null,{"children":"Primitives"}]," (",["$","$L16",null,{"children":["$","code",null,{"children":"qiskit.primitives","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],"href":"/api/qiskit/primitives","className":"text-link-primary no-underline hover:underline inline"}],") - The module that contains the base definitions and reference implementations of the Sampler and Estimator primitives, from which different quantum hardware providers can derive their own implementations. See more information about the Qiskit Runtime primitives ",["$","$L16",null,{"children":"in the documentation","href":"/guides/./primitives","className":"text-link-primary no-underline hover:underline inline"}],"."],"className":"group paragraph-el text-text-primary mx-0"}],"\n"],"className":"my-12"}],"\n"],"className":"list-outside ml-16 px-16 list-disc"}],"\n",["$","h3",null,{"id":"benchmarking-and-the-benchpress-package","className":"group relative mx-0 scroll-pt-[var(--shell-top-bar-height)] break-words text-heading-03 text-text-primary","children":["Benchmarking and the Benchpress package",["$","a",null,{"title":"Permalink to this headline","children":["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"inline","xmlns":"http://www.w3.org/2000/svg","children":["$17","$19","$undefined"]}],"href":"#benchmarking-and-the-benchpress-package","className":"text-link-primary no-underline hover:underline inline heading-permalink pl-[8px] top-0 opacity-0 group-hover:opacity-100 transition-[opacity] duration-75 ease-[cubic-bezier(0.2,0,0.38,0.9)]"}]]}],"\n",["$","p",null,{"children":["Benchmarking is important for comparing the relative performance of quantum software across different stages of a development workflow. Benchmarking tests for quantum software might, for example, look at the speed and quality of building, manipulating, and transpiling circuits. IBM Quantum is committed to delivering the most performant SDK possible, and to that end, the Qiskit SDK is benchmarked using over 1,000 tests developed by leading universities, national labs, and researchers at IBM. The benchmarking suite used for these tests, named Benchpress, is now available as ",["$","a",null,{"children":["an open-source package",["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","aria-label":"(opens in a new tab)","width":16,"height":16,"viewBox":"0 0 32 32","role":"img","className":"inline ml-2","xmlns":"http://www.w3.org/2000/svg","children":["$1b","$undefined"]}]],"href":"https://github.com/qiskit/benchpress","className":"text-link-primary no-underline hover:underline inline","target":"_blank","rel":"noopener noreferrer nofollow"}],". You can now use the Benchpress package to perform your own analysis of quantum SDK performance."],"className":"group paragraph-el text-text-primary mx-0"}],"\n",[["$","hr",null,{"className":"mt-48 lg:mt-64 mb-16 md:mb-24 my-16 lg:my-24 border-t border-border-subtle box-content overflow-visible"}],["$","h2",null,{"id":"qiskit-runtime","className":"group relative mx-0 scroll-pt-[var(--shell-top-bar-height)] break-words text-heading-04 text-text-primary","children":["Qiskit Runtime",["$","a",null,{"title":"Permalink to this headline","children":["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"inline","xmlns":"http://www.w3.org/2000/svg","children":["$17","$19","$undefined"]}],"href":"#qiskit-runtime","className":"text-link-primary no-underline hover:underline inline heading-permalink pl-[8px] top-0 opacity-0 group-hover:opacity-100 transition-[opacity] duration-75 ease-[cubic-bezier(0.2,0,0.38,0.9)]"}]]}]],"\n",["$","p",null,{"children":["Qiskit Runtime is a cloud-based service for executing quantum computations on IBM Quantum™ hardware. The ",["$","code",null,{"children":"qiskit-ibm-runtime","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}]," package is a client for that service, and is the successor to the Qiskit IBM Provider. The Qiskit Runtime service streamlines quantum computations and provides optimal implementations of the Qiskit primitives for IBM Quantum hardware. To get started with Qiskit Runtime primitives, visit the ",["$","$L16",null,{"children":"documentation","href":"/guides/./get-started-with-primitives","className":"text-link-primary no-underline hover:underline inline"}],"."],"className":"group paragraph-el text-text-primary mx-0"}],"\n",["$","p",null,{"children":["With Qiskit Runtime you can choose to run your quantum programs on IBM Quantum hardware through the IBM Quantum Platform or IBM Cloud®. See more information on selecting an IBM Quantum channel ",["$","$L16",null,{"children":"in the documentation","href":"/guides/./setup-channel","className":"text-link-primary no-underline hover:underline inline"}],"."],"className":"group paragraph-el text-text-primary mx-0"}],"\n",["$","p",null,{"children":["Qiskit Runtime is designed to use additional classical and quantum compute resources, including techniques such as error suppression and error mitigation, to return a higher-quality result from executing quantum circuits on quantum processors. Examples include dynamical decoupling for error suppression, and readout mitigation and zero-noise extrapolation (ZNE) for error mitigation. Learn how to configure these options on the ",["$","$L16",null,{"children":"Configure error mitigation","href":"/guides/./configure-error-mitigation","className":"text-link-primary no-underline hover:underline inline"}]," page."],"className":"group paragraph-el text-text-primary mx-0"}],"\n",["$","p",null,{"children":["Qiskit Runtime also includes three types of execution modes for running your quantum program on IBM hardware: ",["$","em",null,{"children":"Job"}],", ",["$","em",null,{"children":"Session"}],", and ",["$","em",null,{"children":"Batch"}],", each of which have different use cases and implications for the quantum job queue. A Job is a single query to a primitive that can be run over a specified number of shots. ",["$","$L16",null,{"children":"Sessions","href":"/guides/./sessions","className":"text-link-primary no-underline hover:underline inline"}]," allow you to efficiently run multiple jobs in iterative workloads on quantum computers. ",["$","$L16",null,{"children":"Batch mode","href":"/guides/./run-jobs-batch","className":"text-link-primary no-underline hover:underline inline"}]," allows you to submit all your jobs at once for parallel processing."],"className":"group paragraph-el text-text-primary mx-0"}],"\n",["$","h3",null,{"id":"is-qiskit-runtime-open-source","className":"group relative mx-0 scroll-pt-[var(--shell-top-bar-height)] break-words text-heading-03 text-text-primary","children":["Is Qiskit Runtime open-source?",["$","a",null,{"title":"Permalink to this headline","children":["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"inline","xmlns":"http://www.w3.org/2000/svg","children":["$17","$19","$undefined"]}],"href":"#is-qiskit-runtime-open-source","className":"text-link-primary no-underline hover:underline inline heading-permalink pl-[8px] top-0 opacity-0 group-hover:opacity-100 transition-[opacity] duration-75 ease-[cubic-bezier(0.2,0,0.38,0.9)]"}]]}],"\n",["$","p",null,{"children":["The short answer is, ",["$","em",null,{"children":"not all of it"}],". The Qiskit Runtime service software that handles the technicalities of running your quantum program on an IBM Quantum device (including any error mitigation and suppression) is ",["$","strong",null,{"children":"not"}]," open-source. However, the Qiskit Runtime client (the interface for users to access the Qiskit Runtime service), the Qiskit SDK running on the server side, and some of the software used for error mitigation, ",["$","strong",null,{"children":"are"}]," open-source.  To get involved with the Qiskit open-source efforts, visit our GitHub organization at ",["$","a",null,{"children":["github.com/Qiskit",["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","aria-label":"(opens in a new tab)","width":16,"height":16,"viewBox":"0 0 32 32","role":"img","className":"inline ml-2","xmlns":"http://www.w3.org/2000/svg","children":["$1b","$undefined"]}]],"href":"https://github.com/Qiskit","className":"text-link-primary no-underline hover:underline inline","target":"_blank","rel":"noopener noreferrer nofollow"}]," and ",["$","a",null,{"children":["github.com/Qiskit-Extensions",["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","aria-label":"(opens in a new tab)","width":16,"height":16,"viewBox":"0 0 32 32","role":"img","className":"inline ml-2","xmlns":"http://www.w3.org/2000/svg","children":["$1b","$undefined"]}]],"href":"https://github.com/Qiskit-Extensions/","className":"text-link-primary no-underline hover:underline inline","target":"_blank","rel":"noopener noreferrer nofollow"}],"."],"className":"group paragraph-el text-text-primary mx-0"}],"\n",[["$","hr",null,{"className":"mt-48 lg:mt-64 mb-16 md:mb-24 my-16 lg:my-24 border-t border-border-subtle box-content overflow-visible"}],["$","h2",null,{"id":"qiskit-serverless","className":"group relative mx-0 scroll-pt-[var(--shell-top-bar-height)] break-words text-heading-04 text-text-primary","children":["Qiskit Serverless",["$","a",null,{"title":"Permalink to this headline","children":["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"inline","xmlns":"http://www.w3.org/2000/svg","children":["$17","$19","$undefined"]}],"href":"#qiskit-serverless","className":"text-link-primary no-underline hover:underline inline heading-permalink pl-[8px] top-0 opacity-0 group-hover:opacity-100 transition-[opacity] duration-75 ease-[cubic-bezier(0.2,0,0.38,0.9)]"}]]}]],"\n",["$","p",null,{"children":["Creating utility-scale quantum applications generally requires a variety of compute resource requirements. Qiskit Serverless (",["$","code",null,{"children":"qiskit-ibm-catalog.QiskitServerless","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],") provides a simple interface to run workloads across quantum-classical resources. This includes deploying programs to IBM Quantum Platform and running workloads remotely, as well as easy resource management for multi-cloud and quantum-centric supercomputing use cases. See more information in the ",["$","$L16",null,{"children":"Qiskit Serverless documentation","href":"/guides/serverless","className":"text-link-primary no-underline hover:underline inline"}]," about how to use this collection of tools to:"],"className":"group paragraph-el text-text-primary mx-0"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Parallelize classical tasks, such as pre-processing and post-processing","className":"my-12"}],"\n",["$","li",null,{"children":"Persist long-running workloads in the cloud, even if your laptop is turned off","className":"my-12"}],"\n",["$","li",null,{"children":"Deploy reusable programs in the cloud","className":"my-12"}],"\n"],"className":"list-outside ml-16 px-16 list-disc"}],"\n",[["$","hr",null,{"className":"mt-48 lg:mt-64 mb-16 md:mb-24 my-16 lg:my-24 border-t border-border-subtle box-content overflow-visible"}],["$","h2",null,{"id":"qiskit-functions","className":"group relative mx-0 scroll-pt-[var(--shell-top-bar-height)] break-words text-heading-04 text-text-primary","children":["Qiskit Functions",["$","a",null,{"title":"Permalink to this headline","children":["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"inline","xmlns":"http://www.w3.org/2000/svg","children":["$17","$19","$undefined"]}],"href":"#qiskit-functions","className":"text-link-primary no-underline hover:underline inline heading-permalink pl-[8px] top-0 opacity-0 group-hover:opacity-100 transition-[opacity] duration-75 ease-[cubic-bezier(0.2,0,0.38,0.9)]"}]]}]],"\n",["$","p",null,{"children":["Qiskit Functions (",["$","code",null,{"children":"qiskit-ibm-catalog.QiskitFunctionsCatalog","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],") are abstracted services designed to accelerate algorithm discovery and application prototyping. Explore the ",["$","a",null,{"children":["Qiskit Functions Catalog",["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","aria-label":"(opens in a new tab)","width":16,"height":16,"viewBox":"0 0 32 32","role":"img","className":"inline ml-2","xmlns":"http://www.w3.org/2000/svg","children":["$1b","$undefined"]}]],"href":"https://quantum.ibm.com/functions","className":"text-link-primary no-underline hover:underline inline","target":"_blank"}],", including:"],"className":"group paragraph-el text-text-primary mx-0"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"Circuit functions"}],": Services that include transpilation, error suppression, error mitigation, and post-processing techniques that take abstract circuits and desired measurement observables as input. With Circuit functions, users can discover new algorithms and applications without needing to manage transpilation or quantum hardware performance."],"className":"my-12"}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Application functions"}],": Services that include entire quantum workflows, from mapping classical to quantum, optimizing for hardware, execution on hardware, and post-processing. Users can prototype industry applications with domain-familiar inputs and outputs."],"className":"my-12"}],"\n"],"className":"list-outside ml-16 px-16 list-disc"}],"\n",["$","p",null,{"children":"Premium Plan members can access IBM-provided functions right away, or purchase licenses for the partner-provided functions directly from those partners.","className":"group paragraph-el text-text-primary mx-0"}],"\n",[["$","hr",null,{"className":"mt-48 lg:mt-64 mb-16 md:mb-24 my-16 lg:my-24 border-t border-border-subtle box-content overflow-visible"}],["$","h2",null,{"id":"qiskit-transpiler-as-a-service","className":"group relative mx-0 scroll-pt-[var(--shell-top-bar-height)] break-words text-heading-04 text-text-primary","children":["Qiskit Transpiler as a Service",["$","a",null,{"title":"Permalink to this headline","children":["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"inline","xmlns":"http://www.w3.org/2000/svg","children":["$17","$19","$undefined"]}],"href":"#qiskit-transpiler-as-a-service","className":"text-link-primary no-underline hover:underline inline heading-permalink pl-[8px] top-0 opacity-0 group-hover:opacity-100 transition-[opacity] duration-75 ease-[cubic-bezier(0.2,0,0.38,0.9)]"}]]}]],"\n",["$","p",null,{"children":["The Qiskit Transpiler Service (",["$","a",null,{"children":[["package name ",["$","code",null,{"children":"qiskit-ibm-transpiler","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}]],["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","aria-label":"(opens in a new tab)","width":16,"height":16,"viewBox":"0 0 32 32","role":"img","className":"inline ml-2","xmlns":"http://www.w3.org/2000/svg","children":["$1b","$undefined"]}]],"href":"https://pypi.org/project/qiskit-ibm-transpiler/","className":"text-link-primary no-underline hover:underline inline","target":"_blank","rel":"noopener noreferrer nofollow"}],") is a new experimental service that provides remote transpilation capabilities on the cloud to IBM Quantum Premium Plan users. In addition to the local Qiskit SDK transpiler capabilities, your transpilation tasks can benefit from both IBM Quantum cloud resources and AI-powered transpiler passes using this service. To learn more about how to integrate cloud-based transpilation into your Qiskit workflow you can ",["$","$L16",null,{"children":"check out the documentation","href":"/guides/./qiskit-transpiler-service","className":"text-link-primary no-underline hover:underline inline"}],"."],"className":"group paragraph-el text-text-primary mx-0"}],"\n",[["$","hr",null,{"className":"mt-48 lg:mt-64 mb-16 md:mb-24 my-16 lg:my-24 border-t border-border-subtle box-content overflow-visible"}],["$","h2",null,{"id":"qiskit-addons","className":"group relative mx-0 scroll-pt-[var(--shell-top-bar-height)] break-words text-heading-04 text-text-primary","children":["Qiskit addons",["$","a",null,{"title":"Permalink to this headline","children":["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"inline","xmlns":"http://www.w3.org/2000/svg","children":["$17","$19","$undefined"]}],"href":"#qiskit-addons","className":"text-link-primary no-underline hover:underline inline heading-permalink pl-[8px] top-0 opacity-0 group-hover:opacity-100 transition-[opacity] duration-75 ease-[cubic-bezier(0.2,0,0.38,0.9)]"}]]}]],"\n",["$","p",null,{"children":["Qiskit addons are a collection of research capabilities for utility-scale algorithm discovery. These capabilities build upon Qiskit’s performant foundation of tools for creating and running quantum algorithms. Addons are modular software components that plug into a workflow to scale or design new quantum algorithms. To learn more about the set of available Qiskit addons and how to get started using them, visit the ",["$","$L16",null,{"children":"documentation","href":"/guides/addons","className":"text-link-primary no-underline hover:underline inline"}],"."],"className":"group paragraph-el text-text-primary mx-0"}],"\n",[["$","hr",null,{"className":"mt-48 lg:mt-64 mb-16 md:mb-24 my-16 lg:my-24 border-t border-border-subtle box-content overflow-visible"}],["$","h2",null,{"id":"the-qiskit-ecosystem","className":"group relative mx-0 scroll-pt-[var(--shell-top-bar-height)] break-words text-heading-04 text-text-primary","children":["The Qiskit ecosystem",["$","a",null,{"title":"Permalink to this headline","children":["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"inline","xmlns":"http://www.w3.org/2000/svg","children":["$17","$19","$undefined"]}],"href":"#the-qiskit-ecosystem","className":"text-link-primary no-underline hover:underline inline heading-permalink pl-[8px] top-0 opacity-0 group-hover:opacity-100 transition-[opacity] duration-75 ease-[cubic-bezier(0.2,0,0.38,0.9)]"}]]}]],"\n",["$","p",null,{"children":"Beyond Qiskit there are many open-source projects that use the \"Qiskit\" name but are not part of Qiskit itself; rather, they interface with Qiskit and can provide valuable additional functionality to supplement the core Qiskit workflow. Some of these projects are maintained by IBM Quantum teams, whereas others are supported by the broader open-source community. The Qiskit SDK is designed in a modular, extensible way to make it easy for developers to create projects like these that extend its capabilities.","className":"group paragraph-el text-text-primary mx-0"}],"\n",["$","p",null,{"children":"Some popular projects in the Qiskit ecosystem include:","className":"group paragraph-el text-text-primary mx-0"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"Qiskit Aer"}]," (",["$","code",null,{"children":"qiskit-aer","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],") - a package for quantum computing simulators with realistic noise models. It provides interfaces to run quantum circuits with or without noise using multiple different simulation methods. Maintained by IBM Quantum."],"className":"my-12"}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"qBraid SDK"}]," (",["$","code",null,{"children":"qbraid","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],") - a platform-agnostic quantum runtime framework for both quantum software and hardware providers, designed to streamline the full lifecycle management of quantum jobs—from defining program specifications to job submission and through to the post-processing and visualization of results. Maintained by qBraid."],"className":"my-12"}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"mthree"}]," ",["$","code",null,{"children":"mthree","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}]," - a package for implementing M3 (Matrix-free Measurement Mitigation), a measurement mitigation technique that solves for corrected measurement probabilities using a dimensionality reduction step followed by either direct LU factorization or a preconditioned iterative method that nominally converges in O(1) steps, and can be computed in parallel. Maintained by IBM Quantum."],"className":"my-12"}],"\n"],"className":"list-outside ml-16 px-16 list-disc"}],"\n",["$","p",null,{"children":["You can find a catalog of projects in the ",["$","a",null,{"children":["Qiskit ecosystem page",["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","aria-label":"(opens in a new tab)","width":16,"height":16,"viewBox":"0 0 32 32","role":"img","className":"inline ml-2","xmlns":"http://www.w3.org/2000/svg","children":["$1b","$undefined"]}]],"href":"https://qiskit.github.io/ecosystem/","className":"text-link-primary no-underline hover:underline inline","target":"_blank","rel":"noopener noreferrer nofollow"}],", as well as information about how to nominate your own project."],"className":"group paragraph-el text-text-primary mx-0"}],"\n",[["$","hr",null,{"className":"mt-48 lg:mt-64 mb-16 md:mb-24 my-16 lg:my-24 border-t border-border-subtle box-content overflow-visible"}],["$","h2",null,{"id":"next-steps","className":"group relative mx-0 scroll-pt-[var(--shell-top-bar-height)] break-words text-heading-04 text-text-primary","children":["Next steps",["$","a",null,{"title":"Permalink to this headline","children":["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"inline","xmlns":"http://www.w3.org/2000/svg","children":["$17","$19","$undefined"]}],"href":"#next-steps","className":"text-link-primary no-underline hover:underline inline heading-permalink pl-[8px] top-0 opacity-0 group-hover:opacity-100 transition-[opacity] duration-75 ease-[cubic-bezier(0.2,0,0.38,0.9)]"}]]}]],"\n",["$","div",null,{"className":"not-prose my-12 lg:my-16 rounded border border-solid border-layer-02","children":[["$","div",null,{"className":"bg-layer-02 text-text-primary font-600 p-12 py-8 flex items-center gap-8","children":[["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"text-purple-50","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M11 24H21V26H11zM13 28H19V30H13zM16 2A10 10 0 006 12a9.19 9.19 0 003.46 7.62c1 .93 1.54 1.46 1.54 2.38h2c0-1.84-1.11-2.87-2.19-3.86A7.2 7.2 0 018 12a8 8 0 0116 0 7.2 7.2 0 01-2.82 6.14c-1.07 1-2.18 2-2.18 3.86h2c0-.92.53-1.45 1.54-2.39A9.18 9.18 0 0026 12 10 10 0 0016 2z"}],"$undefined"]}],"Recommendations"]}],["$","div",null,{"className":"px-12 [&>p]:my-12","children":["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","$L16",null,{"children":"Install the Qiskit SDK and Qiskit Runtime","href":"/guides/install-qiskit","className":"text-link-primary no-underline hover:underline inline"}],"."],"className":"my-12"}],"\n",["$","li",null,{"children":["Run your first quantum program with the ",["$","$L16",null,{"children":"Hello World","href":"/guides/hello-world","className":"text-link-primary no-underline hover:underline inline"}]," guide."],"className":"my-12"}],"\n"],"className":"list-outside ml-16 px-16 list-disc"}]}]]}]]}]}],["$","aside",null,{"data-testid":"page-toc","className":"hidden lg:flex flex-col gap-40 w-[184px] xlg:w-[207px] mr-24 xlg:mr-32 sticky top-[var(--app-header-height)] self-start py-24","style":{"marginTop":"40px","maxHeight":"calc(100vh - var(--app-header-height) - 40px)"},"children":["$","$L1d",null,{"headings":[{"depth":1,"value":"Introduction to Qiskit","compiledValue":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, props.components);\n  return _jsx(_components.div, {\n    children: \"Introduction to Qiskit\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","id":"introduction-to-qiskit"},{"depth":2,"value":"The Qiskit SDK","compiledValue":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, props.components);\n  return _jsx(_components.div, {\n    children: \"The Qiskit SDK\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","id":"the-qiskit-sdk"},{"depth":3,"value":"Benchmarking and the Benchpress package","compiledValue":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, props.components);\n  return _jsx(_components.div, {\n    children: \"Benchmarking and the Benchpress package\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","id":"benchmarking-and-the-benchpress-package"},{"depth":2,"value":"Qiskit Runtime","compiledValue":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, props.components);\n  return _jsx(_components.div, {\n    children: \"Qiskit Runtime\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","id":"qiskit-runtime"},{"depth":3,"value":"Is Qiskit Runtime open-source?","compiledValue":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, props.components);\n  return _jsx(_components.div, {\n    children: \"Is Qiskit Runtime open-source?\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","id":"is-qiskit-runtime-open-source"},{"depth":2,"value":"Qiskit Serverless","compiledValue":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, props.components);\n  return _jsx(_components.div, {\n    children: \"Qiskit Serverless\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","id":"qiskit-serverless"},{"depth":2,"value":"Qiskit Functions","compiledValue":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, props.components);\n  return _jsx(_components.div, {\n    children: \"Qiskit Functions\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","id":"qiskit-functions"},{"depth":2,"value":"Qiskit Transpiler as a Service","compiledValue":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, props.components);\n  return _jsx(_components.div, {\n    children: \"Qiskit Transpiler as a Service\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","id":"qiskit-transpiler-as-a-service"},{"depth":2,"value":"Qiskit addons","compiledValue":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, props.components);\n  return _jsx(_components.div, {\n    children: \"Qiskit addons\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","id":"qiskit-addons"},{"depth":2,"value":"The Qiskit ecosystem","compiledValue":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, props.components);\n  return _jsx(_components.div, {\n    children: \"The Qiskit ecosystem\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","id":"the-qiskit-ecosystem"},{"depth":2,"value":"Next steps","compiledValue":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, props.components);\n  return _jsx(_components.div, {\n    children: \"Next steps\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","id":"next-steps"}],"minHeadingLevel":2,"maxHeadingLevel":3}]}]]}]
